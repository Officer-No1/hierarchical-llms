
help: Configuration file two robots, two targets, one type I zone
testID: 101
exp: "ros real"  # 0: "simulation", 1: "ros simulation", 2: "ros real"
steps: 500
 
frame_id: "global_origin"
llm_inner_dur: 5
llm_outer_dur: 30
llm_on: True

Problem:
    robotID: [26]
    robotID_drone: [26]
    targetID: [124]
    targetID_car: [124]
    targetStartPos: [[-1, 0.4]] #, [1.5, 0.25]]  # [x, y], or [x, y, z]
    targetStartVel: [[0.1, 0]] #, [-0.1, 0]]
    robotStartPos: [[-2.0, 0.6]] #, [2.0, 0.2]]
    robotStartVel: [[0.01, 0]] #, [0, 0]]
    target_dyn_type: "second_order_dynamics"
    robot_dyn_type: "first_order_dynamics"
    assignment_matrix: [[1]] # [0, 0, 1]]  # robot i is assigned to target j
    task_ability: 1
    target_movement: "linear"  # "random_walk" or "linear"
    # row is robot, column is target
    robotHeights: [1.5] #, 0.1]


    N : 2
    dt: 0.5
    dim: 2
    u_bounds: [-0.5, 0.5]  # control effort bounds
    x_bounds: [[-2, 10], [-2, 10]]  # x bound, and y bound
    weights : [0.01, 10.0, 500.0, 500.0] # control input, trace, slack 1, slack 2
    range_sensor: [15.0, 0.2]   #[range_peak, range_shape]
    bearing_sensor: [15.0, 0.2]   #[bearing_peak, bearing_shape]
    min_dist: 0.8
    max_dist: 6000  # can also affect the quality of the solution, can set inf
    solver_name: "resilient_exp1"
    use_cent_solver: True # if True, the central solver will be used

    ## archived
    resources: 500 # for each robot


Zones:
    nTypeI: 2
    nTypeII: 1
    typeI_mu: [[0.0, 0], [2.5, 0.5]] # [x, y], or [x, y, z]     [[x1, y1], [x2, y2]]
    typeI_cov: [[0.3, 0.3], [0.2, 0.2]]  #### 
    typeII_mu: [[1.5, -0.5]]
    typeII_cov: [[0.2, 0.2]]
    typeI_delta: [0.2, 0.2]  # this is for the type I zones
    typeII_delta: [0.1]  # this is for the type II zones
    eps1: 0.1 # (0, 0.5) the probability is p < eps1
    eps2: 0.95 # (0.5, 1) the probability is p > 1 - eps2
    eps2_single: 0.05
    # if you want to randomly generate the zone location
    is_random: 0

    #### attack parameters
    attack_recover_eps: 0.2
    attack_dt: 2 # every 1.0 second the attack will happen
    attack_mcnt: 1000 # the maximum number of attacks
    attack_seed: 0
